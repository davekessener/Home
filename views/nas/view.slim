link rel="stylesheet" href="/css/nas/view.css"

- require 'fileutils'
- require 'cgi'

- req_path = request.path_info.to_s
- raise unless req_path.start_with? '/nas/view'
- req_path = req_path[9..-1]

- date_changed = ->(f) { storage.mtime(f).strftime('%d.%m.%y %H:%M:%S') }
- file_size = ->(f) { storage.filesize(f) }
- url_to = ->(f) { Storage.path('/nas/view', req_path, f) }

input#path type="hidden" value="#{req_path}"

.container
	.row
		.col-xs-10
			h1
				a href="/nas/view"
					="nas/"
				- t = ''
				- req_path.split(/\//).each do |p|
					- next if p.empty?
					- t = "#{t}/#{p}"
					a href="/nas/view#{t}"
						="#{p}/"
		.col-xs-2.text-right
			a href="/nas/upload?path=#{CGI.escape req_path}"
				button.btn.btn-primary.btn-buffer
					span.glyphicon.glyphicon-arrow-up
	- if storage.exist? req_path and storage.directory? req_path
		table.table.table-striped.table-bordered
			thead
				tr
					th style="width:50%;"
						=s('name')
					th
						=s('size')
					th
						=s('changed')
					th
						=s('type')
					th
						=s('action')
			tbody
				tr
					td.input-cell
						input#new_folder_name.input-inline
					td
					td
					td
					td
						span#new_folder_button.glyphicon.glyphicon-plus.icon-green
				- unless req_path.empty?
					tr
						td
							a href="/nas/view#{File.dirname(req_path)}"
								b
									=s('parent')
						td
							="---"
						td
							="n/a"
						td
							=s('dir')
						td
				- files = storage.glob("#{req_path}/*").sort { |a, b| a.downcase <=> b.downcase }
				- files.each do |f|
					- next unless storage.directory? f
					- m = date_changed.(f)
					- fn = File.basename(f)
					tr
						td
							a href="#{url_to.(fn)}"
								b
									="#{fn}"
						td
							="---"
						td
							="#{m}"
						td
							=s('dir')
						td
							a href="/nas/delete?file=#{CGI.escape f}"
								span.glyphicon.glyphicon-remove.icon-red
				- files.each do |f|
					- next if storage.directory? f
					- s = Helper.size_h(storage.filesize f)
					- m = date_changed.(f)
					- fn = File.basename(f)
					tr
						td
							a href="/nas/download?file=#{CGI.escape f}"
								="#{fn}"
						td
							=s
						td
							="#{m}"
						td
							="#{fn.include?('.') ? '.' + fn.split(/\./)[-1].upcase + ' ' : ''}#{s('file')}"
						td
							a href="/nas/delete?file=#{CGI.escape f}"
								span.glyphicon.glyphicon-remove.icon-red

script src="/js/nas/view.js"
